

##############################################
PALM: Prompt Learning in Audio Language Models
##############################################


Time & Date = 02:08 PM , 13_Jun_2024  GST



Model:    COCOOP
Dataset:  UrbanSound8K
Seed:     1


Creating a 16-shot dataset ...


################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: 16

Total Number of Samples: 160

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################




################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: -1

Total Number of Samples: 936

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################


Using Method: 'COCOOP'

REDACTED/.venvs/palm/lib/python3.8/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
Initializing a Generic Context for COCOOP ...
args:  Namespace(batch_size=16, classnames=['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music'], ctx_dim=512, dataset_root='REDACTED/Audio-Datasets/UrbanSound8K', device=device(type='cuda'), do_logging=True, eval_only=False, exp_name='UrbanSound8K-FOLD5', freq_test_model=10, json_file_path='logs/cocoop/UrbanSound8K-FOLD5.json', log_dir='logs/cocoop', lr=0.05, model_name='cocoop', model_path='', n_ctx=16, n_epochs=50, num_shots=16, process_audio_fn=<bound method PengiWrapper.preprocess_audio of <pengi.wrapper.PengiWrapper object at 0x7f04ab170130>>, prompt_prefix='The is a recording of ', repeat=False, resample=True, save_model_path='REDACTED/Audio-Datasets/UrbanSound8K', seed=1, spec_aug=False, start_epoch=0)

  0%|          | 0/50 [00:00<?, ?it/s]
  2%|2         | 1/50 [00:07<06:22,  7.81s/it]
  4%|4         | 2/50 [00:15<06:02,  7.56s/it]
  6%|6         | 3/50 [00:22<05:52,  7.49s/it]
  8%|8         | 4/50 [00:30<05:44,  7.48s/it]
 10%|#         | 5/50 [00:37<05:32,  7.39s/it]
 12%|#2        | 6/50 [00:44<05:25,  7.40s/it]
 14%|#4        | 7/50 [00:52<05:24,  7.55s/it]
 16%|#6        | 8/50 [01:00<05:19,  7.62s/it]
 18%|#8        | 9/50 [01:08<05:16,  7.73s/it]

Epoch 10/50

Accuracy             = 0.8250
F1-Score             = 0.8218
Precision            = 0.8261
Recall               = 0.8250
Average Loss         = 0.5476



 20%|##        | 10/50 [01:15<05:03,  7.59s/it]
 22%|##2       | 11/50 [01:23<04:54,  7.55s/it]
 24%|##4       | 12/50 [01:30<04:47,  7.56s/it]
 26%|##6       | 13/50 [01:37<04:36,  7.47s/it]
 28%|##8       | 14/50 [01:45<04:29,  7.47s/it]
 30%|###       | 15/50 [01:53<04:28,  7.67s/it]
 32%|###2      | 16/50 [02:01<04:19,  7.62s/it]
 34%|###4      | 17/50 [02:08<04:11,  7.61s/it]
 36%|###6      | 18/50 [02:16<04:03,  7.62s/it]
 38%|###8      | 19/50 [02:23<03:50,  7.43s/it]

Epoch 20/50

Accuracy             = 0.8187
F1-Score             = 0.8113
Precision            = 0.8233
Recall               = 0.8187
Average Loss         = 0.4654



 40%|####      | 20/50 [02:30<03:42,  7.43s/it]
 42%|####2     | 21/50 [02:38<03:36,  7.46s/it]
 44%|####4     | 22/50 [02:45<03:28,  7.44s/it]
 46%|####6     | 23/50 [02:53<03:23,  7.52s/it]
 48%|####8     | 24/50 [03:00<03:16,  7.57s/it]
 50%|#####     | 25/50 [03:08<03:08,  7.55s/it]
 52%|#####2    | 26/50 [03:15<03:00,  7.51s/it]
 54%|#####4    | 27/50 [03:23<02:53,  7.53s/it]
 56%|#####6    | 28/50 [03:31<02:47,  7.59s/it]
 58%|#####8    | 29/50 [03:38<02:40,  7.63s/it]

Epoch 30/50

Accuracy             = 0.9563
F1-Score             = 0.9557
Precision            = 0.9583
Recall               = 0.9563
Average Loss         = 0.1202



 60%|######    | 30/50 [03:46<02:32,  7.60s/it]
 62%|######2   | 31/50 [03:53<02:23,  7.56s/it]
 64%|######4   | 32/50 [04:01<02:16,  7.60s/it]
 66%|######6   | 33/50 [04:09<02:09,  7.59s/it]
 68%|######8   | 34/50 [04:16<02:01,  7.61s/it]
 70%|#######   | 35/50 [04:24<01:54,  7.64s/it]
 72%|#######2  | 36/50 [04:32<01:46,  7.64s/it]
 74%|#######4  | 37/50 [04:39<01:38,  7.59s/it]
 76%|#######6  | 38/50 [04:46<01:30,  7.50s/it]
 78%|#######8  | 39/50 [04:54<01:22,  7.53s/it]

Epoch 40/50

Accuracy             = 0.9625
F1-Score             = 0.9622
Precision            = 0.9646
Recall               = 0.9625
Average Loss         = 0.0871



 80%|########  | 40/50 [05:02<01:15,  7.59s/it]
 82%|########2 | 41/50 [05:09<01:08,  7.60s/it]
 84%|########4 | 42/50 [05:17<01:00,  7.57s/it]
 86%|########6 | 43/50 [05:24<00:52,  7.56s/it]
 88%|########8 | 44/50 [05:32<00:45,  7.56s/it]
 90%|######### | 45/50 [05:40<00:37,  7.55s/it]
 92%|#########2| 46/50 [05:47<00:30,  7.52s/it]
 94%|#########3| 47/50 [05:55<00:22,  7.59s/it]
 96%|#########6| 48/50 [06:02<00:15,  7.63s/it]
 98%|#########8| 49/50 [06:10<00:07,  7.60s/it]

Epoch 50/50

Accuracy             = 0.9563
F1-Score             = 0.9562
Precision            = 0.9566
Recall               = 0.9563
Average Loss         = 0.1401




Evaluating the model ...


  0%|          | 0/8 [00:00<?, ?it/s][A

 12%|#2        | 1/8 [00:03<00:24,  3.51s/it][A

 25%|##5       | 2/8 [00:05<00:16,  2.72s/it][A

 38%|###7      | 3/8 [00:07<00:12,  2.46s/it][A

 50%|#####     | 4/8 [00:10<00:09,  2.36s/it][A

 62%|######2   | 5/8 [00:12<00:06,  2.31s/it][A

 75%|#######5  | 6/8 [00:14<00:04,  2.26s/it][A

 88%|########7 | 7/8 [00:16<00:02,  2.23s/it][A

100%|##########| 8/8 [00:17<00:00,  1.75s/it][A
100%|##########| 8/8 [00:17<00:00,  2.19s/it]


Time & Date = 02:15 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 0 Minutes : 18 Seconds



Epoch 50/50

Accuracy             = 0.7788
F1-Score             = 0.7589
Precision            = 0.7926
Recall               = 0.7887
Average Loss         = 0.7447




Final Evaluation
Saving Results ...
Results Saved



100%|##########| 50/50 [06:36<00:00, 13.05s/it]
100%|##########| 50/50 [06:36<00:00,  7.92s/it]


Time & Date = 02:15 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 6 Minutes : 36 Seconds


