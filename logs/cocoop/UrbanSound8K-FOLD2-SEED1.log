

##############################################
PALM: Prompt Learning in Audio Language Models
##############################################


Time & Date = 12:59 PM , 13_Jun_2024  GST



Model:    COCOOP
Dataset:  UrbanSound8K
Seed:     1


Creating a 16-shot dataset ...


################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: 16

Total Number of Samples: 160

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################




################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: -1

Total Number of Samples: 888

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################


Using Method: 'COCOOP'

REDACTED/.venvs/palm/lib/python3.8/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
Initializing a Generic Context for COCOOP ...
args:  Namespace(batch_size=16, classnames=['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music'], ctx_dim=512, dataset_root='REDACTED/Audio-Datasets/UrbanSound8K', device=device(type='cuda'), do_logging=True, eval_only=False, exp_name='UrbanSound8K-FOLD2', freq_test_model=10, json_file_path='logs/cocoop/UrbanSound8K-FOLD2.json', log_dir='logs/cocoop', lr=0.05, model_name='cocoop', model_path='', n_ctx=16, n_epochs=50, num_shots=16, process_audio_fn=<bound method PengiWrapper.preprocess_audio of <pengi.wrapper.PengiWrapper object at 0x7faeb6c14130>>, prompt_prefix='The is a recording of ', repeat=False, resample=True, save_model_path='REDACTED/Audio-Datasets/UrbanSound8K', seed=1, spec_aug=False, start_epoch=0)

  0%|          | 0/50 [00:00<?, ?it/s]
  2%|2         | 1/50 [00:08<06:57,  8.53s/it]
  4%|4         | 2/50 [00:16<06:31,  8.15s/it]
  6%|6         | 3/50 [00:24<06:16,  8.02s/it]
  8%|8         | 4/50 [00:32<06:07,  7.99s/it]
 10%|#         | 5/50 [00:40<06:02,  8.06s/it]
 12%|#2        | 6/50 [00:48<05:49,  7.93s/it]
 14%|#4        | 7/50 [00:55<05:36,  7.82s/it]
 16%|#6        | 8/50 [01:03<05:28,  7.82s/it]
 18%|#8        | 9/50 [01:11<05:20,  7.83s/it]

Epoch 10/50

Accuracy             = 0.7750
F1-Score             = 0.7749
Precision            = 0.7872
Recall               = 0.7750
Average Loss         = 0.6553



 20%|##        | 10/50 [01:19<05:16,  7.91s/it]
 22%|##2       | 11/50 [01:27<05:09,  7.93s/it]
 24%|##4       | 12/50 [01:35<05:01,  7.92s/it]
 26%|##6       | 13/50 [01:43<04:50,  7.86s/it]
 28%|##8       | 14/50 [01:50<04:43,  7.86s/it]
 30%|###       | 15/50 [01:59<04:44,  8.13s/it]
 32%|###2      | 16/50 [02:07<04:34,  8.06s/it]
 34%|###4      | 17/50 [02:15<04:24,  8.02s/it]
 36%|###6      | 18/50 [02:23<04:20,  8.15s/it]
 38%|###8      | 19/50 [02:32<04:15,  8.25s/it]

Epoch 20/50

Accuracy             = 0.9187
F1-Score             = 0.9188
Precision            = 0.9202
Recall               = 0.9187
Average Loss         = 0.2828



 40%|####      | 20/50 [02:40<04:10,  8.35s/it]
 42%|####2     | 21/50 [02:48<03:57,  8.19s/it]
 44%|####4     | 22/50 [02:56<03:43,  7.99s/it]
 46%|####6     | 23/50 [03:04<03:34,  7.93s/it]
 48%|####8     | 24/50 [03:12<03:27,  7.98s/it]
 50%|#####     | 25/50 [03:20<03:19,  7.99s/it]
 52%|#####2    | 26/50 [03:28<03:13,  8.08s/it]
 54%|#####4    | 27/50 [03:36<03:07,  8.14s/it]
 56%|#####6    | 28/50 [03:44<02:59,  8.16s/it]
 58%|#####8    | 29/50 [03:53<02:52,  8.22s/it]

Epoch 30/50

Accuracy             = 0.8938
F1-Score             = 0.8936
Precision            = 0.8956
Recall               = 0.8938
Average Loss         = 0.2651



 60%|######    | 30/50 [04:01<02:42,  8.13s/it]
 62%|######2   | 31/50 [04:09<02:33,  8.06s/it]
 64%|######4   | 32/50 [04:17<02:26,  8.12s/it]
 66%|######6   | 33/50 [04:25<02:19,  8.18s/it]
 68%|######8   | 34/50 [04:33<02:09,  8.06s/it]
 70%|#######   | 35/50 [04:42<02:03,  8.25s/it]
 72%|#######2  | 36/50 [04:51<01:58,  8.45s/it]
 74%|#######4  | 37/50 [04:59<01:51,  8.56s/it]
 76%|#######6  | 38/50 [05:08<01:43,  8.66s/it]
 78%|#######8  | 39/50 [05:17<01:35,  8.72s/it]

Epoch 40/50

Accuracy             = 0.9625
F1-Score             = 0.9625
Precision            = 0.9640
Recall               = 0.9625
Average Loss         = 0.1062



 80%|########  | 40/50 [05:26<01:28,  8.82s/it]
 82%|########2 | 41/50 [05:35<01:18,  8.72s/it]
 84%|########4 | 42/50 [05:43<01:09,  8.64s/it]
 86%|########6 | 43/50 [05:51<00:59,  8.51s/it]
 88%|########8 | 44/50 [06:00<00:50,  8.43s/it]
 90%|######### | 45/50 [06:08<00:41,  8.31s/it]
 92%|#########2| 46/50 [06:16<00:33,  8.38s/it]
 94%|#########3| 47/50 [06:25<00:25,  8.40s/it]
 96%|#########6| 48/50 [06:34<00:17,  8.67s/it]
 98%|#########8| 49/50 [06:41<00:08,  8.23s/it]

Epoch 50/50

Accuracy             = 0.9938
F1-Score             = 0.9937
Precision            = 0.9941
Recall               = 0.9938
Average Loss         = 0.0510




Evaluating the model ...


  0%|          | 0/7 [00:00<?, ?it/s][A

 14%|#4        | 1/7 [00:04<00:26,  4.39s/it][A

 29%|##8       | 2/7 [00:06<00:16,  3.24s/it][A

 43%|####2     | 3/7 [00:09<00:11,  2.89s/it][A

 57%|#####7    | 4/7 [00:11<00:08,  2.70s/it][A

 71%|#######1  | 5/7 [00:14<00:05,  2.63s/it][A

 86%|########5 | 6/7 [00:16<00:02,  2.53s/it][A

100%|##########| 7/7 [00:18<00:00,  2.41s/it][A
100%|##########| 7/7 [00:18<00:00,  2.70s/it]


Time & Date = 01:06 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 0 Minutes : 19 Seconds



Epoch 50/50

Accuracy             = 0.8637
F1-Score             = 0.8643
Precision            = 0.8656
Recall               = 0.8715
Average Loss         = 0.5291




Final Evaluation
Saving Results ...
Results Saved



100%|##########| 50/50 [07:08<00:00, 13.93s/it]
100%|##########| 50/50 [07:08<00:00,  8.58s/it]


Time & Date = 01:06 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 7 Minutes : 8 Seconds


