

##############################################
PALM: Prompt Learning in Audio Language Models
##############################################


Time & Date = 01:30 PM , 13_Jun_2024  GST



Model:    COCOOP
Dataset:  UrbanSound8K
Seed:     2


Creating a 16-shot dataset ...


################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: 16

Total Number of Samples: 160

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################




################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: -1

Total Number of Samples: 925

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################


Using Method: 'COCOOP'

REDACTED/.venvs/palm/lib/python3.8/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
Initializing a Generic Context for COCOOP ...
args:  Namespace(batch_size=16, classnames=['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music'], ctx_dim=512, dataset_root='REDACTED/Audio-Datasets/UrbanSound8K', device=device(type='cuda'), do_logging=True, eval_only=False, exp_name='UrbanSound8K-FOLD3', freq_test_model=10, json_file_path='logs/cocoop/UrbanSound8K-FOLD3.json', log_dir='logs/cocoop', lr=0.05, model_name='cocoop', model_path='', n_ctx=16, n_epochs=50, num_shots=16, process_audio_fn=<bound method PengiWrapper.preprocess_audio of <pengi.wrapper.PengiWrapper object at 0x7f8de80ff130>>, prompt_prefix='The is a recording of ', repeat=False, resample=True, save_model_path='REDACTED/Audio-Datasets/UrbanSound8K', seed=2, spec_aug=False, start_epoch=0)

  0%|          | 0/50 [00:00<?, ?it/s]
  2%|2         | 1/50 [00:09<07:23,  9.04s/it]
  4%|4         | 2/50 [00:17<06:58,  8.71s/it]
  6%|6         | 3/50 [00:26<07:04,  9.02s/it]
  8%|8         | 4/50 [00:35<06:46,  8.84s/it]
 10%|#         | 5/50 [00:43<06:25,  8.57s/it]
 12%|#2        | 6/50 [00:53<06:32,  8.91s/it]
 14%|#4        | 7/50 [01:01<06:12,  8.67s/it]
 16%|#6        | 8/50 [01:10<06:13,  8.89s/it]
 18%|#8        | 9/50 [01:18<05:55,  8.68s/it]

Epoch 10/50

Accuracy             = 0.8313
F1-Score             = 0.8338
Precision            = 0.8462
Recall               = 0.8313
Average Loss         = 0.6278



 20%|##        | 10/50 [01:26<05:37,  8.44s/it]
 22%|##2       | 11/50 [01:35<05:28,  8.41s/it]
 24%|##4       | 12/50 [01:43<05:13,  8.25s/it]
 26%|##6       | 13/50 [01:51<05:03,  8.20s/it]
 28%|##8       | 14/50 [01:59<04:52,  8.14s/it]
 30%|###       | 15/50 [02:07<04:47,  8.21s/it]
 32%|###2      | 16/50 [02:15<04:36,  8.14s/it]
 34%|###4      | 17/50 [02:23<04:31,  8.22s/it]
 36%|###6      | 18/50 [02:32<04:28,  8.38s/it]
 38%|###8      | 19/50 [02:41<04:20,  8.40s/it]

Epoch 20/50

Accuracy             = 0.8500
F1-Score             = 0.8493
Precision            = 0.8539
Recall               = 0.8500
Average Loss         = 0.4877



 40%|####      | 20/50 [02:48<04:07,  8.25s/it]
 42%|####2     | 21/50 [02:56<03:56,  8.14s/it]
 44%|####4     | 22/50 [03:04<03:47,  8.13s/it]
 46%|####6     | 23/50 [03:13<03:40,  8.18s/it]
 48%|####8     | 24/50 [03:21<03:32,  8.17s/it]
 50%|#####     | 25/50 [03:29<03:24,  8.19s/it]
 52%|#####2    | 26/50 [03:37<03:13,  8.06s/it]
 54%|#####4    | 27/50 [03:45<03:05,  8.05s/it]
 56%|#####6    | 28/50 [03:53<02:56,  8.01s/it]
 58%|#####8    | 29/50 [04:01<02:48,  8.04s/it]

Epoch 30/50

Accuracy             = 0.8938
F1-Score             = 0.8934
Precision            = 0.8984
Recall               = 0.8938
Average Loss         = 0.3440



 60%|######    | 30/50 [04:09<02:40,  8.00s/it]
 62%|######2   | 31/50 [04:17<02:31,  7.98s/it]
 64%|######4   | 32/50 [04:25<02:25,  8.11s/it]
 66%|######6   | 33/50 [04:33<02:17,  8.10s/it]
 68%|######8   | 34/50 [04:41<02:07,  7.97s/it]
 70%|#######   | 35/50 [04:49<01:58,  7.91s/it]
 72%|#######2  | 36/50 [04:56<01:50,  7.88s/it]
 74%|#######4  | 37/50 [05:04<01:41,  7.84s/it]
 76%|#######6  | 38/50 [05:12<01:33,  7.83s/it]
 78%|#######8  | 39/50 [05:20<01:26,  7.82s/it]

Epoch 40/50

Accuracy             = 0.8812
F1-Score             = 0.8813
Precision            = 0.8858
Recall               = 0.8812
Average Loss         = 0.3175



 80%|########  | 40/50 [05:28<01:18,  7.80s/it]
 82%|########2 | 41/50 [05:36<01:10,  7.88s/it]
 84%|########4 | 42/50 [05:44<01:03,  7.90s/it]
 86%|########6 | 43/50 [05:52<00:55,  7.97s/it]
 88%|########8 | 44/50 [06:00<00:48,  8.07s/it]
 90%|######### | 45/50 [06:08<00:39,  7.98s/it]
 92%|#########2| 46/50 [06:17<00:32,  8.22s/it]
 94%|#########3| 47/50 [06:25<00:24,  8.27s/it]
 96%|#########6| 48/50 [06:34<00:16,  8.45s/it]
 98%|#########8| 49/50 [06:42<00:08,  8.47s/it]

Epoch 50/50

Accuracy             = 0.9125
F1-Score             = 0.9110
Precision            = 0.9158
Recall               = 0.9125
Average Loss         = 0.2680




Evaluating the model ...


  0%|          | 0/8 [00:00<?, ?it/s][A

 12%|#2        | 1/8 [00:03<00:25,  3.65s/it][A

 25%|##5       | 2/8 [00:05<00:17,  2.88s/it][A

 38%|###7      | 3/8 [00:08<00:13,  2.67s/it][A

 50%|#####     | 4/8 [00:10<00:10,  2.60s/it][A

 62%|######2   | 5/8 [00:13<00:07,  2.52s/it][A

 75%|#######5  | 6/8 [00:15<00:05,  2.52s/it][A

 88%|########7 | 7/8 [00:18<00:02,  2.52s/it][A

100%|##########| 8/8 [00:18<00:00,  1.93s/it][A
100%|##########| 8/8 [00:19<00:00,  2.41s/it]


Time & Date = 01:37 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 0 Minutes : 19 Seconds



Epoch 50/50

Accuracy             = 0.7027
F1-Score             = 0.6934
Precision            = 0.6926
Recall               = 0.7052
Average Loss         = 0.9017




Final Evaluation
Saving Results ...
Results Saved



100%|##########| 50/50 [07:11<00:00, 14.46s/it]
100%|##########| 50/50 [07:11<00:00,  8.63s/it]


Time & Date = 01:37 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 7 Minutes : 11 Seconds


