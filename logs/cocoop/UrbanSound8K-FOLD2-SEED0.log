

##############################################
PALM: Prompt Learning in Audio Language Models
##############################################


Time & Date = 12:51 PM , 13_Jun_2024  GST



Model:    COCOOP
Dataset:  UrbanSound8K
Seed:     0


Creating a 16-shot dataset ...


################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: 16

Total Number of Samples: 160

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################




################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: -1

Total Number of Samples: 888

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################


Using Method: 'COCOOP'

REDACTED/.venvs/palm/lib/python3.8/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
Initializing a Generic Context for COCOOP ...
args:  Namespace(batch_size=16, classnames=['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music'], ctx_dim=512, dataset_root='REDACTED/Audio-Datasets/UrbanSound8K', device=device(type='cuda'), do_logging=True, eval_only=False, exp_name='UrbanSound8K-FOLD2', freq_test_model=10, json_file_path='logs/cocoop/UrbanSound8K-FOLD2.json', log_dir='logs/cocoop', lr=0.05, model_name='cocoop', model_path='', n_ctx=16, n_epochs=50, num_shots=16, process_audio_fn=<bound method PengiWrapper.preprocess_audio of <pengi.wrapper.PengiWrapper object at 0x7f826e8d1130>>, prompt_prefix='The is a recording of ', repeat=False, resample=True, save_model_path='REDACTED/Audio-Datasets/UrbanSound8K', seed=0, spec_aug=False, start_epoch=0)

  0%|          | 0/50 [00:00<?, ?it/s]
  2%|2         | 1/50 [00:08<06:49,  8.36s/it]
  4%|4         | 2/50 [00:16<06:25,  8.04s/it]
  6%|6         | 3/50 [00:23<06:06,  7.80s/it]
  8%|8         | 4/50 [00:31<05:54,  7.71s/it]
 10%|#         | 5/50 [00:39<05:52,  7.83s/it]
 12%|#2        | 6/50 [00:47<05:44,  7.82s/it]
 14%|#4        | 7/50 [00:55<05:39,  7.90s/it]
 16%|#6        | 8/50 [01:03<05:31,  7.89s/it]
 18%|#8        | 9/50 [01:10<05:17,  7.73s/it]

Epoch 10/50

Accuracy             = 0.7750
F1-Score             = 0.7771
Precision            = 0.7925
Recall               = 0.7750
Average Loss         = 0.7149



 20%|##        | 10/50 [01:18<05:09,  7.73s/it]
 22%|##2       | 11/50 [01:26<05:04,  7.80s/it]
 24%|##4       | 12/50 [01:33<04:53,  7.72s/it]
 26%|##6       | 13/50 [01:41<04:51,  7.87s/it]
 28%|##8       | 14/50 [01:50<04:47,  7.99s/it]
 30%|###       | 15/50 [01:58<04:41,  8.04s/it]
 32%|###2      | 16/50 [02:06<04:37,  8.16s/it]
 34%|###4      | 17/50 [02:14<04:28,  8.15s/it]
 36%|###6      | 18/50 [02:22<04:18,  8.07s/it]
 38%|###8      | 19/50 [02:31<04:15,  8.24s/it]

Epoch 20/50

Accuracy             = 0.8688
F1-Score             = 0.8695
Precision            = 0.8744
Recall               = 0.8688
Average Loss         = 0.4086



 40%|####      | 20/50 [02:39<04:03,  8.12s/it]
 42%|####2     | 21/50 [02:47<03:54,  8.09s/it]
 44%|####4     | 22/50 [02:54<03:42,  7.96s/it]
 46%|####6     | 23/50 [03:03<03:38,  8.09s/it]
 48%|####8     | 24/50 [03:11<03:30,  8.08s/it]
 50%|#####     | 25/50 [03:19<03:21,  8.07s/it]
 52%|#####2    | 26/50 [03:27<03:12,  8.00s/it]
 54%|#####4    | 27/50 [03:35<03:02,  7.95s/it]
 56%|#####6    | 28/50 [03:43<02:55,  8.00s/it]
 58%|#####8    | 29/50 [03:50<02:46,  7.95s/it]

Epoch 30/50

Accuracy             = 0.9000
F1-Score             = 0.9002
Precision            = 0.9034
Recall               = 0.9000
Average Loss         = 0.2777



 60%|######    | 30/50 [03:58<02:36,  7.81s/it]
 62%|######2   | 31/50 [04:06<02:28,  7.80s/it]
 64%|######4   | 32/50 [04:14<02:20,  7.81s/it]
 66%|######6   | 33/50 [04:22<02:15,  7.98s/it]
 68%|######8   | 34/50 [04:30<02:08,  8.05s/it]
 70%|#######   | 35/50 [04:39<02:02,  8.20s/it]
 72%|#######2  | 36/50 [04:46<01:52,  8.05s/it]
 74%|#######4  | 37/50 [04:55<01:45,  8.09s/it]
 76%|#######6  | 38/50 [05:03<01:37,  8.10s/it]
 78%|#######8  | 39/50 [05:11<01:29,  8.18s/it]

Epoch 40/50

Accuracy             = 0.9500
F1-Score             = 0.9493
Precision            = 0.9518
Recall               = 0.9500
Average Loss         = 0.1424



 80%|########  | 40/50 [05:19<01:22,  8.22s/it]
 82%|########2 | 41/50 [05:28<01:14,  8.25s/it]
 84%|########4 | 42/50 [05:36<01:06,  8.26s/it]
 86%|########6 | 43/50 [05:44<00:56,  8.11s/it]
 88%|########8 | 44/50 [05:52<00:48,  8.16s/it]
 90%|######### | 45/50 [06:00<00:39,  7.99s/it]
 92%|#########2| 46/50 [06:08<00:32,  8.10s/it]
 94%|#########3| 47/50 [06:16<00:24,  8.19s/it]
 96%|#########6| 48/50 [06:25<00:16,  8.34s/it]
 98%|#########8| 49/50 [06:33<00:08,  8.17s/it]

Epoch 50/50

Accuracy             = 0.9812
F1-Score             = 0.9812
Precision            = 0.9824
Recall               = 0.9812
Average Loss         = 0.0873




Evaluating the model ...


  0%|          | 0/7 [00:00<?, ?it/s][A

 14%|#4        | 1/7 [00:05<00:34,  5.76s/it][A

 29%|##8       | 2/7 [00:08<00:19,  3.83s/it][A

 43%|####2     | 3/7 [00:10<00:12,  3.18s/it][A

 57%|#####7    | 4/7 [00:13<00:08,  2.89s/it][A

 71%|#######1  | 5/7 [00:15<00:05,  2.78s/it][A

 86%|########5 | 6/7 [00:18<00:02,  2.64s/it][A

100%|##########| 7/7 [00:20<00:00,  2.58s/it][A
100%|##########| 7/7 [00:20<00:00,  2.96s/it]


Time & Date = 12:58 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 0 Minutes : 21 Seconds



Epoch 50/50

Accuracy             = 0.7489
F1-Score             = 0.7506
Precision            = 0.7562
Recall               = 0.7753
Average Loss         = 0.9968




Final Evaluation
Saving Results ...
Results Saved



100%|##########| 50/50 [07:02<00:00, 14.59s/it]
100%|##########| 50/50 [07:02<00:00,  8.46s/it]


Time & Date = 12:58 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 7 Minutes : 2 Seconds


