

##############################################
PALM: Prompt Learning in Audio Language Models
##############################################


Time & Date = 03:14 PM , 13_Jun_2024  GST



Model:    COCOOP
Dataset:  UrbanSound8K
Seed:     1


Creating a 16-shot dataset ...


################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: 16

Total Number of Samples: 160

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################




################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: -1

Total Number of Samples: 806

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################


Using Method: 'COCOOP'

REDACTED/.venvs/palm/lib/python3.8/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
Initializing a Generic Context for COCOOP ...
args:  Namespace(batch_size=16, classnames=['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music'], ctx_dim=512, dataset_root='REDACTED/Audio-Datasets/UrbanSound8K', device=device(type='cuda'), do_logging=True, eval_only=False, exp_name='UrbanSound8K-FOLD8', freq_test_model=10, json_file_path='logs/cocoop/UrbanSound8K-FOLD8.json', log_dir='logs/cocoop', lr=0.05, model_name='cocoop', model_path='', n_ctx=16, n_epochs=50, num_shots=16, process_audio_fn=<bound method PengiWrapper.preprocess_audio of <pengi.wrapper.PengiWrapper object at 0x7ff276859130>>, prompt_prefix='The is a recording of ', repeat=False, resample=True, save_model_path='REDACTED/Audio-Datasets/UrbanSound8K', seed=1, spec_aug=False, start_epoch=0)

  0%|          | 0/50 [00:00<?, ?it/s]
  2%|2         | 1/50 [00:07<06:21,  7.79s/it]
  4%|4         | 2/50 [00:15<06:13,  7.77s/it]
  6%|6         | 3/50 [00:23<06:04,  7.75s/it]
  8%|8         | 4/50 [00:30<05:52,  7.65s/it]
 10%|#         | 5/50 [00:38<05:44,  7.66s/it]
 12%|#2        | 6/50 [00:46<05:38,  7.69s/it]
 14%|#4        | 7/50 [00:53<05:24,  7.55s/it]
 16%|#6        | 8/50 [01:01<05:17,  7.56s/it]
 18%|#8        | 9/50 [01:08<05:04,  7.43s/it]

Epoch 10/50

Accuracy             = 0.8187
F1-Score             = 0.8166
Precision            = 0.8201
Recall               = 0.8187
Average Loss         = 0.6271



 20%|##        | 10/50 [01:15<04:58,  7.46s/it]
 22%|##2       | 11/50 [01:22<04:47,  7.38s/it]
 24%|##4       | 12/50 [01:30<04:44,  7.48s/it]
 26%|##6       | 13/50 [01:38<04:36,  7.48s/it]
 28%|##8       | 14/50 [01:45<04:28,  7.45s/it]
 30%|###       | 15/50 [01:52<04:20,  7.43s/it]
 32%|###2      | 16/50 [02:00<04:12,  7.43s/it]
 34%|###4      | 17/50 [02:07<04:05,  7.45s/it]
 36%|###6      | 18/50 [02:14<03:54,  7.34s/it]
 38%|###8      | 19/50 [02:22<03:50,  7.44s/it]

Epoch 20/50

Accuracy             = 0.9563
F1-Score             = 0.9567
Precision            = 0.9607
Recall               = 0.9563
Average Loss         = 0.2649



 40%|####      | 20/50 [02:30<03:46,  7.54s/it]
 42%|####2     | 21/50 [02:37<03:39,  7.56s/it]
 44%|####4     | 22/50 [02:45<03:33,  7.61s/it]
 46%|####6     | 23/50 [02:53<03:24,  7.57s/it]
 48%|####8     | 24/50 [03:00<03:15,  7.52s/it]
 50%|#####     | 25/50 [03:07<03:06,  7.46s/it]
 52%|#####2    | 26/50 [03:15<03:00,  7.51s/it]
 54%|#####4    | 27/50 [03:23<02:54,  7.60s/it]
 56%|#####6    | 28/50 [03:30<02:47,  7.62s/it]
 58%|#####8    | 29/50 [03:38<02:38,  7.55s/it]

Epoch 30/50

Accuracy             = 0.9812
F1-Score             = 0.9814
Precision            = 0.9830
Recall               = 0.9812
Average Loss         = 0.1049



 60%|######    | 30/50 [03:45<02:30,  7.53s/it]
 62%|######2   | 31/50 [03:53<02:23,  7.55s/it]
 64%|######4   | 32/50 [04:01<02:16,  7.57s/it]
 66%|######6   | 33/50 [04:08<02:08,  7.58s/it]
 68%|######8   | 34/50 [04:16<02:00,  7.52s/it]
 70%|#######   | 35/50 [04:23<01:53,  7.58s/it]
 72%|#######2  | 36/50 [04:31<01:46,  7.59s/it]
 74%|#######4  | 37/50 [04:39<01:39,  7.66s/it]
 76%|#######6  | 38/50 [04:46<01:31,  7.59s/it]
 78%|#######8  | 39/50 [04:53<01:22,  7.50s/it]

Epoch 40/50

Accuracy             = 0.9875
F1-Score             = 0.9875
Precision            = 0.9879
Recall               = 0.9875
Average Loss         = 0.0540



 80%|########  | 40/50 [05:01<01:13,  7.40s/it]
 82%|########2 | 41/50 [05:08<01:06,  7.38s/it]
 84%|########4 | 42/50 [05:15<00:59,  7.38s/it]
 86%|########6 | 43/50 [05:23<00:51,  7.40s/it]
 88%|########8 | 44/50 [05:30<00:44,  7.46s/it]
 90%|######### | 45/50 [05:38<00:37,  7.41s/it]
 92%|#########2| 46/50 [05:45<00:29,  7.35s/it]
 94%|#########3| 47/50 [05:52<00:21,  7.30s/it]
 96%|#########6| 48/50 [06:00<00:14,  7.46s/it]
 98%|#########8| 49/50 [06:07<00:07,  7.49s/it]

Epoch 50/50

Accuracy             = 0.9812
F1-Score             = 0.9812
Precision            = 0.9820
Recall               = 0.9812
Average Loss         = 0.0998




Evaluating the model ...


  0%|          | 0/7 [00:00<?, ?it/s][A

 14%|#4        | 1/7 [00:04<00:27,  4.66s/it][A

 29%|##8       | 2/7 [00:06<00:15,  3.19s/it][A

 43%|####2     | 3/7 [00:09<00:11,  2.77s/it][A

 57%|#####7    | 4/7 [00:11<00:07,  2.54s/it][A

 71%|#######1  | 5/7 [00:17<00:07,  3.99s/it][A

 86%|########5 | 6/7 [00:20<00:03,  3.37s/it][A

100%|##########| 7/7 [00:20<00:00,  2.50s/it][A
100%|##########| 7/7 [00:20<00:00,  2.99s/it]


Time & Date = 03:20 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 0 Minutes : 21 Seconds



Epoch 50/50

Accuracy             = 0.7829
F1-Score             = 0.7703
Precision            = 0.7714
Recall               = 0.8049
Average Loss         = 0.8706




Final Evaluation
Saving Results ...
Results Saved



100%|##########| 50/50 [06:37<00:00, 13.98s/it]
100%|##########| 50/50 [06:37<00:00,  7.94s/it]


Time & Date = 03:20 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 6 Minutes : 37 Seconds


