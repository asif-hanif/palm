

##############################################
PALM: Prompt Learning in Audio Language Models
##############################################


Time & Date = 12:44 PM , 13_Jun_2024  GST



Model:    COCOOP
Dataset:  UrbanSound8K
Seed:     2


Creating a 16-shot dataset ...


################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: 16

Total Number of Samples: 160

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################




################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: -1

Total Number of Samples: 873

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################


Using Method: 'COCOOP'

REDACTED/.venvs/palm/lib/python3.8/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
Initializing a Generic Context for COCOOP ...
args:  Namespace(batch_size=16, classnames=['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music'], ctx_dim=512, dataset_root='REDACTED/Audio-Datasets/UrbanSound8K', device=device(type='cuda'), do_logging=True, eval_only=False, exp_name='UrbanSound8K-FOLD1', freq_test_model=10, json_file_path='logs/cocoop/UrbanSound8K-FOLD1.json', log_dir='logs/cocoop', lr=0.05, model_name='cocoop', model_path='', n_ctx=16, n_epochs=50, num_shots=16, process_audio_fn=<bound method PengiWrapper.preprocess_audio of <pengi.wrapper.PengiWrapper object at 0x7fe984d53130>>, prompt_prefix='The is a recording of ', repeat=False, resample=True, save_model_path='REDACTED/Audio-Datasets/UrbanSound8K', seed=2, spec_aug=False, start_epoch=0)

  0%|          | 0/50 [00:00<?, ?it/s]
  2%|2         | 1/50 [00:08<07:08,  8.73s/it]
  4%|4         | 2/50 [00:16<06:31,  8.15s/it]
  6%|6         | 3/50 [00:24<06:10,  7.89s/it]
  8%|8         | 4/50 [00:31<05:57,  7.76s/it]
 10%|#         | 5/50 [00:39<05:49,  7.76s/it]
 12%|#2        | 6/50 [00:47<05:47,  7.90s/it]
 14%|#4        | 7/50 [00:55<05:35,  7.81s/it]
 16%|#6        | 8/50 [01:02<05:26,  7.77s/it]
 18%|#8        | 9/50 [01:10<05:19,  7.80s/it]

Epoch 10/50

Accuracy             = 0.8812
F1-Score             = 0.8810
Precision            = 0.8865
Recall               = 0.8812
Average Loss         = 0.4662



 20%|##        | 10/50 [01:18<05:11,  7.78s/it]
 22%|##2       | 11/50 [01:26<05:04,  7.80s/it]
 24%|##4       | 12/50 [01:34<04:57,  7.82s/it]
 26%|##6       | 13/50 [01:41<04:47,  7.78s/it]
 28%|##8       | 14/50 [01:49<04:39,  7.76s/it]
 30%|###       | 15/50 [01:57<04:30,  7.74s/it]
 32%|###2      | 16/50 [02:05<04:24,  7.79s/it]
 34%|###4      | 17/50 [02:13<04:17,  7.81s/it]
 36%|###6      | 18/50 [02:21<04:13,  7.91s/it]
 38%|###8      | 19/50 [02:29<04:09,  8.06s/it]

Epoch 20/50

Accuracy             = 0.8812
F1-Score             = 0.8798
Precision            = 0.8819
Recall               = 0.8812
Average Loss         = 0.3749



 40%|####      | 20/50 [02:37<04:00,  8.00s/it]
 42%|####2     | 21/50 [02:46<03:57,  8.19s/it]
 44%|####4     | 22/50 [02:53<03:46,  8.09s/it]
 46%|####6     | 23/50 [03:01<03:37,  8.05s/it]
 48%|####8     | 24/50 [03:09<03:27,  7.99s/it]
 50%|#####     | 25/50 [03:17<03:19,  7.96s/it]
 52%|#####2    | 26/50 [03:25<03:09,  7.91s/it]
 54%|#####4    | 27/50 [03:33<03:01,  7.89s/it]
 56%|#####6    | 28/50 [03:41<02:56,  8.02s/it]
 58%|#####8    | 29/50 [03:49<02:49,  8.06s/it]

Epoch 30/50

Accuracy             = 0.8750
F1-Score             = 0.8722
Precision            = 0.8870
Recall               = 0.8750
Average Loss         = 0.3125



 60%|######    | 30/50 [03:58<02:45,  8.28s/it]
 62%|######2   | 31/50 [04:06<02:34,  8.16s/it]
 64%|######4   | 32/50 [04:14<02:24,  8.02s/it]
 66%|######6   | 33/50 [04:22<02:17,  8.08s/it]
 68%|######8   | 34/50 [04:30<02:11,  8.21s/it]
 70%|#######   | 35/50 [04:38<02:02,  8.18s/it]
 72%|#######2  | 36/50 [04:46<01:52,  8.00s/it]
 74%|#######4  | 37/50 [04:54<01:44,  8.06s/it]
 76%|#######6  | 38/50 [05:02<01:37,  8.11s/it]
 78%|#######8  | 39/50 [05:10<01:28,  8.07s/it]

Epoch 40/50

Accuracy             = 0.8812
F1-Score             = 0.8823
Precision            = 0.8868
Recall               = 0.8812
Average Loss         = 0.3130



 80%|########  | 40/50 [05:19<01:20,  8.07s/it]
 82%|########2 | 41/50 [05:27<01:12,  8.11s/it]
 84%|########4 | 42/50 [05:35<01:04,  8.02s/it]
 86%|########6 | 43/50 [05:42<00:55,  7.94s/it]
 88%|########8 | 44/50 [05:50<00:47,  7.93s/it]
 90%|######### | 45/50 [05:58<00:39,  7.91s/it]
 92%|#########2| 46/50 [06:06<00:32,  8.01s/it]
 94%|#########3| 47/50 [06:14<00:23,  7.99s/it]
 96%|#########6| 48/50 [06:22<00:16,  8.06s/it]
 98%|#########8| 49/50 [06:30<00:08,  8.03s/it]

Epoch 50/50

Accuracy             = 0.9625
F1-Score             = 0.9624
Precision            = 0.9660
Recall               = 0.9625
Average Loss         = 0.1394




Evaluating the model ...


  0%|          | 0/7 [00:00<?, ?it/s][A

 14%|#4        | 1/7 [00:05<00:32,  5.40s/it][A

 29%|##8       | 2/7 [00:07<00:18,  3.64s/it][A

 43%|####2     | 3/7 [00:10<00:12,  3.17s/it][A

 57%|#####7    | 4/7 [00:12<00:08,  2.91s/it][A

 71%|#######1  | 5/7 [00:15<00:05,  2.74s/it][A

 86%|########5 | 6/7 [00:17<00:02,  2.66s/it][A

100%|##########| 7/7 [00:19<00:00,  2.45s/it][A
100%|##########| 7/7 [00:20<00:00,  2.87s/it]


Time & Date = 12:51 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 0 Minutes : 20 Seconds



Epoch 50/50

Accuracy             = 0.7388
F1-Score             = 0.7397
Precision            = 0.7537
Recall               = 0.7655
Average Loss         = 0.7558




Final Evaluation
Saving Results ...
Results Saved



100%|##########| 50/50 [06:59<00:00, 14.29s/it]
100%|##########| 50/50 [06:59<00:00,  8.40s/it]


Time & Date = 12:51 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 6 Minutes : 59 Seconds


