

##############################################
PALM: Prompt Learning in Audio Language Models
##############################################


Time & Date = 03:42 PM , 13_Jun_2024  GST



Model:    COCOOP
Dataset:  UrbanSound8K
Seed:     2


Creating a 16-shot dataset ...


################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: 16

Total Number of Samples: 160

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################




################## Dataset Information ##################
FewShot Dataset

Root: REDACTED/Audio-Datasets/UrbanSound8K

Number of Classes: 10

Number of Shots: -1

Total Number of Samples: 816

Classnames: ['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music']

Label to Classname: {0: 'air conditioner', 1: 'car horn', 2: 'children playing', 3: 'dog bark', 4: 'drilling', 5: 'engine idling', 6: 'gun shot', 7: 'jackhammer', 8: 'siren', 9: 'street music'}

Classname to Label: {'air conditioner': 0, 'car horn': 1, 'children playing': 2, 'dog bark': 3, 'drilling': 4, 'engine idling': 5, 'gun shot': 6, 'jackhammer': 7, 'siren': 8, 'street music': 9}
########################################################


Using Method: 'COCOOP'

REDACTED/.venvs/palm/lib/python3.8/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
Initializing a Generic Context for COCOOP ...
args:  Namespace(batch_size=16, classnames=['air conditioner', 'car horn', 'children playing', 'dog bark', 'drilling', 'engine idling', 'gun shot', 'jackhammer', 'siren', 'street music'], ctx_dim=512, dataset_root='REDACTED/Audio-Datasets/UrbanSound8K', device=device(type='cuda'), do_logging=True, eval_only=False, exp_name='UrbanSound8K-FOLD9', freq_test_model=10, json_file_path='logs/cocoop/UrbanSound8K-FOLD9.json', log_dir='logs/cocoop', lr=0.05, model_name='cocoop', model_path='', n_ctx=16, n_epochs=50, num_shots=16, process_audio_fn=<bound method PengiWrapper.preprocess_audio of <pengi.wrapper.PengiWrapper object at 0x7fe6017fb130>>, prompt_prefix='The is a recording of ', repeat=False, resample=True, save_model_path='REDACTED/Audio-Datasets/UrbanSound8K', seed=2, spec_aug=False, start_epoch=0)

  0%|          | 0/50 [00:00<?, ?it/s]
  2%|2         | 1/50 [00:07<06:22,  7.82s/it]
  4%|4         | 2/50 [00:15<06:16,  7.85s/it]
  6%|6         | 3/50 [00:22<05:56,  7.59s/it]
  8%|8         | 4/50 [00:30<05:44,  7.49s/it]
 10%|#         | 5/50 [00:37<05:33,  7.41s/it]
 12%|#2        | 6/50 [00:46<05:53,  8.02s/it]
 14%|#4        | 7/50 [00:53<05:32,  7.74s/it]
 16%|#6        | 8/50 [01:01<05:19,  7.61s/it]
 18%|#8        | 9/50 [01:08<05:06,  7.49s/it]

Epoch 10/50

Accuracy             = 0.8063
F1-Score             = 0.8028
Precision            = 0.8086
Recall               = 0.8063
Average Loss         = 0.6049



 20%|##        | 10/50 [01:17<05:20,  8.02s/it]
 22%|##2       | 11/50 [01:26<05:25,  8.36s/it]
 24%|##4       | 12/50 [01:34<05:05,  8.03s/it]
 26%|##6       | 13/50 [01:41<04:49,  7.82s/it]
 28%|##8       | 14/50 [01:48<04:34,  7.64s/it]
 30%|###       | 15/50 [01:56<04:24,  7.56s/it]
 32%|###2      | 16/50 [02:03<04:12,  7.43s/it]
 34%|###4      | 17/50 [02:10<04:02,  7.34s/it]
 36%|###6      | 18/50 [02:18<04:07,  7.75s/it]
 38%|###8      | 19/50 [02:26<03:57,  7.65s/it]

Epoch 20/50

Accuracy             = 0.8313
F1-Score             = 0.8310
Precision            = 0.8380
Recall               = 0.8313
Average Loss         = 0.4343



 40%|####      | 20/50 [02:34<03:52,  7.76s/it]
 42%|####2     | 21/50 [02:41<03:41,  7.63s/it]
 44%|####4     | 22/50 [02:49<03:35,  7.69s/it]
 46%|####6     | 23/50 [02:57<03:30,  7.79s/it]
 48%|####8     | 24/50 [03:04<03:19,  7.66s/it]
 50%|#####     | 25/50 [03:12<03:09,  7.59s/it]
 52%|#####2    | 26/50 [03:19<03:00,  7.52s/it]
 54%|#####4    | 27/50 [03:27<02:51,  7.47s/it]
 56%|#####6    | 28/50 [03:35<02:48,  7.67s/it]
 58%|#####8    | 29/50 [03:44<02:50,  8.12s/it]

Epoch 30/50

Accuracy             = 0.8500
F1-Score             = 0.8519
Precision            = 0.8558
Recall               = 0.8500
Average Loss         = 0.4279



 60%|######    | 30/50 [03:51<02:36,  7.84s/it]
 62%|######2   | 31/50 [03:58<02:25,  7.65s/it]
 64%|######4   | 32/50 [04:06<02:16,  7.60s/it]
 66%|######6   | 33/50 [04:14<02:13,  7.87s/it]
 68%|######8   | 34/50 [04:22<02:03,  7.72s/it]
 70%|#######   | 35/50 [04:29<01:53,  7.58s/it]
 72%|#######2  | 36/50 [04:36<01:44,  7.46s/it]
 74%|#######4  | 37/50 [04:43<01:35,  7.38s/it]
 76%|#######6  | 38/50 [04:51<01:28,  7.34s/it]
 78%|#######8  | 39/50 [04:58<01:20,  7.33s/it]

Epoch 40/50

Accuracy             = 0.8750
F1-Score             = 0.8762
Precision            = 0.8811
Recall               = 0.8750
Average Loss         = 0.2980



 80%|########  | 40/50 [05:05<01:12,  7.29s/it]
 82%|########2 | 41/50 [05:13<01:07,  7.50s/it]
 84%|########4 | 42/50 [05:20<00:59,  7.40s/it]
 86%|########6 | 43/50 [05:28<00:51,  7.37s/it]
 88%|########8 | 44/50 [05:35<00:44,  7.34s/it]
 90%|######### | 45/50 [05:42<00:36,  7.31s/it]
 92%|#########2| 46/50 [05:51<00:30,  7.74s/it]
 94%|#########3| 47/50 [05:58<00:22,  7.60s/it]
 96%|#########6| 48/50 [06:06<00:15,  7.67s/it]
 98%|#########8| 49/50 [06:14<00:07,  7.76s/it]

Epoch 50/50

Accuracy             = 0.9437
F1-Score             = 0.9432
Precision            = 0.9465
Recall               = 0.9437
Average Loss         = 0.2188




Evaluating the model ...


  0%|          | 0/7 [00:00<?, ?it/s][A

 14%|#4        | 1/7 [00:03<00:23,  3.89s/it][A

 29%|##8       | 2/7 [00:05<00:13,  2.75s/it][A

 43%|####2     | 3/7 [00:07<00:09,  2.40s/it][A

 57%|#####7    | 4/7 [00:09<00:06,  2.23s/it][A

 71%|#######1  | 5/7 [00:11<00:04,  2.14s/it][A

 86%|########5 | 6/7 [00:13<00:02,  2.08s/it][A

100%|##########| 7/7 [00:14<00:00,  1.66s/it][A
100%|##########| 7/7 [00:14<00:00,  2.11s/it]


Time & Date = 03:49 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 0 Minutes : 15 Seconds



Epoch 50/50

Accuracy             = 0.7659
F1-Score             = 0.7651
Precision            = 0.7795
Recall               = 0.7904
Average Loss         = 1.0182




Final Evaluation
Saving Results ...
Results Saved



100%|##########| 50/50 [06:38<00:00, 12.62s/it]
100%|##########| 50/50 [06:38<00:00,  7.97s/it]


Time & Date = 03:49 PM , 13_Jun_2024  GST

Total Time => 0 Hours : 6 Minutes : 38 Seconds


